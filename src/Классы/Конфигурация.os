Перем ПутьККонфигурации;
Перем ТипыКоллекций;
Перем Имена;
Перем Идентификаторы;
Перем Объекты;

// Конструктор
//
// Параметры:
//	Путь		- Строка		- путь к файлам выгрузки конфигурации
//
Процедура ПриСозданииОбъекта(Знач Путь)

	КаталогМакетов = ОбъединитьПути(ТекущийСценарий().Каталог, "..", "Макеты");
	ЗаполнитьТипыКоллекций(ОбъединитьПути(КаталогМакетов, "ТипыМодулей.txt"));
	УстановитьПуть(Путь, Истина);

КонецПроцедуры // ПриСозданииОбъекта()

// Процедура устанавливает путь к файлам конфигурации
//
// Параметры:
//	Путь		- Строка		- путь к файлам выгрузки конфигурации
//	Обновить	- Булево		- обновить данные конфигурации
//
Процедура УстановитьПуть(Знач Путь, Обновить = Ложь) Экспорт

	ПутьККонфигурации = Путь;

	Если Обновить Тогда
		Обновить();
	КонецЕсли;

КонецПроцедуры // УстановитьПуть()

// Функция возвращает текущий путь к файлам конфигурации
//
// Возвращаемое значение:
//	Строка		- путь к файлам выгрузки конфигурации
//
Функция Путь() Экспорт

	Возврат ПутьККонфигурации;

КонецФункции // Путь()

// Процедура обновляет данные конфигурации
//
Процедура Обновить() Экспорт

	Путь = ОбъединитьПути(Путь(), "Configuration.xml");

	Файл = Новый Файл(Путь);
	Если НЕ Файл.Существует() Тогда
		Возврат;
	КонецЕсли;
	
	Объекты = Новый Соответствие();
	Идентификаторы = Новый Соответствие();
	Имена = Новый Соответствие();
	
	Чтение = Новый ЧтениеXML();
	Чтение.ОткрытьФайл(Путь);

	Пока Чтение.Прочитать() Цикл

		Если НЕ Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		КонецЕсли;
		
		Если Чтение.Имя = "Configuration" Тогда
			Объекты.Вставить("Configuration", Новый Структура("Ид, Имя, Путь",
															Чтение.ПолучитьАтрибут("uuid"),
															"Configuration",
															Путь));
			Идентификаторы.Вставить(Объекты["Configuration"].Ид, Объекты["Configuration"]);
			Имена.Вставить(Объекты["Configuration"].Имя, Объекты["Configuration"]);
		ИначеЕсли Чтение.Имя = "ChildObjects" Тогда
			ПрочитатьОбъектыКонфигурации(Чтение);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // Обновить()

// Функция возвращает структуру объектов конфигурации в виде дерева
//
// Возвращаемое значение:
//	Соответствие		- структура объектов конфигурации
//
Функция Объекты() Экспорт

	Возврат Объекты;

КонецФункции // Объекты()

// Функция возвращает соответствие идентификаторов и объектов конфигурации
//
// Возвращаемое значение:
//	Соответствие		- объекты конфигурации упорядоченные по идентификаторам
//
Функция Идентификаторы() Экспорт

	Возврат Идентификаторы;

КонецФункции // Идентификаторы()

// Функция возвращает соответствие имен и объектов конфигурации
//
// Возвращаемое значение:
//	Соответствие		- объекты конфигурации упорядоченные по имени
//
Функция Имена() Экспорт

	Возврат Имена;

КонецФункции // Имена()

Функция ПолучитьПутиКМодулямКоллекции(СтрокаМодулей)

	СтруктураМодулей = Новый Структура();

	Модули = СтрРазделить(СтрокаМодулей, ";");

	Для Каждого ТекМодуль Из Модули Цикл
		
		ОписаниеМодуля = СтрРазделить(СокрЛП(ТекМодуль), ":");

		СтруктураМодулей.Вставить(ОписаниеМодуля[0], ОписаниеМодуля[1]);
	КонецЦикла;

	Возврат СтруктураМодулей;

КонецФункции // ПолучитьПутиКМодулямКоллекции()

Процедура ДобавитьТипКоллекции(ПарамТипыКоллекций
							, Имя
							, ИмяАнгл
							, КоллекцияИмя
							, КоллекцияИмяАнгл
							, Тип
							, Модули)

	Если НЕ ТипЗнч(ПарамТипыКоллекций) = Тип("Массив") Тогда
		ПарамТипыКоллекций = Новый Массив();
	КонецЕсли;

	ОписаниеТипаКоллекции = Новый Структура("Имя, ИмяАнгл, КоллекцияИмя, КоллекцияИмяАнгл, Тип, Модули");
	ОписаниеТипаКоллекции.Имя				= Имя;
	ОписаниеТипаКоллекции.ИмяАнгл			= ИмяАнгл;
	ОписаниеТипаКоллекции.КоллекцияИмя		= КоллекцияИмя;
	ОписаниеТипаКоллекции.КоллекцияИмяАнгл	= КоллекцияИмяАнгл;
	ОписаниеТипаКоллекции.Тип				= Тип;
	ОписаниеТипаКоллекции.Модули			= Модули;

	ПарамТипыКоллекций.Добавить(ОписаниеТипаКоллекции);

КонецПроцедуры // ДобавитьТипКоллекции()

Процедура ЗаполнитьТипыКоллекций(Знач ПутьКМакету)

	КоличествоПолейОписания = 6;

	ВремТипыКоллекций = Новый Массив();

	Чтение = Новый ЧтениеТекста();
	Чтение.Открыть(ПутьКМакету, КодировкаТекста.UTF8);

	ТекстСтроки = Чтение.ПрочитатьСтроку();

	Пока НЕ ТекстСтроки = Неопределено Цикл

		ОписаниеКоллекции = СтрРазделить(ТекстСтроки, ",");

		Если НЕ ОписаниеКоллекции.Количество() = КоличествоПолейОписания Тогда
			ТекстСтроки = Чтение.ПрочитатьСтроку();
			Продолжить;
		КонецЕсли;

		ДобавитьТипКоллекции(ВремТипыКоллекций
							, СокрЛП(ОписаниеКоллекции[0])
							, СокрЛП(ОписаниеКоллекции[1])
							, СокрЛП(ОписаниеКоллекции[2])
							, СокрЛП(ОписаниеКоллекции[3])
							, СокрЛП(ОписаниеКоллекции[4])
							, ПолучитьПутиКМодулямКоллекции(СокрЛП(ОписаниеКоллекции[5])));

		ТекстСтроки = Чтение.ПрочитатьСтроку();

	КонецЦикла;

	ТипыКоллекций = Новый ФиксированныйМассив(ВремТипыКоллекций);

КонецПроцедуры // ЗаполнитьТипыКоллекций()

Функция ТипыКоллекций(ИмяПоляУпорядочивания = "Имя") Экспорт

	Если НЕ ЗначениеЗаполнено(ИмяПоляУпорядочивания) Тогда
		Возврат ТипыКоллекций;
	КонецЕсли;

	ВремТипыКоллекций = Новый Соответствие();

	Для Каждого ТекЭлемент Из ТипыКоллекций Цикл
		ВремТипыКоллекций.Вставить(ТекЭлемент[ИмяПоляУпорядочивания], ТекЭлемент);
	КонецЦикла;

	Возврат ВремТипыКоллекций;

КонецФункции // ТипыКоллекций()

Процедура ПрочитатьОбъектыКонфигурации(Чтение)

	ТипыОбъектов = ТипыКоллекций("ИмяАнгл");

	Пока Чтение.Прочитать() Цикл

		Если Чтение.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если Чтение.Имя = "ChildObjects" Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;

		Если НЕ Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		КонецЕсли;
		
		ТекТип = ТипыОбъектов.Получить(Чтение.Имя);

		Если ТекТип = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ИмяОбъекта = ОбщегоНазначения.ПрочитатьЗначение(Чтение);
		ПутьКОбъекту = ОбъединитьПути(Путь(), ТекТип.КоллекцияИмяАнгл, ИмяОбъекта + ".xml");

		ПолноеИмяОбъекта = ТекТип.ИмяАнгл + "." + ИмяОбъекта;
		Объекты.Вставить(ПолноеИмяОбъекта, ПолучитьОбъектКонфигурации(ПутьКОбъекту, ТекТип.ИмяАнгл));
		Идентификаторы.Вставить(Объекты[ПолноеИмяОбъекта].Ид, Объекты[ПолноеИмяОбъекта]);
		Имена.Вставить(Объекты[ПолноеИмяОбъекта].Имя, Объекты[ПолноеИмяОбъекта]);
	КонецЦикла;

КонецПроцедуры // ПрочитатьОбъектыКонфигурации()

Функция ПолучитьОбъектКонфигурации(Знач Путь, Тип)

	ТипыОбъектов = ТипыКоллекций("ИмяАнгл");

	ФайлОбъекта = Новый Файл(Путь);
	Если НЕ ФайлОбъекта.Существует() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОписаниеОбъекта = Новый Структура();

	Чтение = Новый ЧтениеXML();
	Чтение.ОткрытьФайл(Путь);

	Пока Чтение.Прочитать() Цикл

		Если НЕ Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		КонецЕсли;
		
		Если Чтение.Имя = Тип Тогда
			ОписаниеОбъекта.Вставить("Ид", Чтение.ПолучитьАтрибут("uuid"));
			ОписаниеОбъекта.Вставить("Имя", ТипыОбъектов[Тип].КоллекцияИмя + "." + ФайлОбъекта.ИмяБезРасширения);
			ОписаниеОбъекта.Вставить("Каталог", ОбъединитьПути(ФайлОбъекта.Путь, ФайлОбъекта.ИмяБезРасширения));
			ОписаниеОбъекта.Вставить("Описание", Путь);
			ДобавитьМодулиОбъекта(ОписаниеОбъекта, ТипыОбъектов[Тип]["Модули"]);
		ИначеЕсли Чтение.Имя = "ChildObjects" Тогда
			ПрочитатьПодчиненныеОбъекты(Чтение, ОписаниеОбъекта);
		КонецЕсли;

	КонецЦикла;

	Возврат ОписаниеОбъекта;

КонецФункции // ПолучитьОбъектКонфигурации()

Процедура ДобавитьМодулиОбъекта(ОписаниеОбъекта, Модули)

	Для Каждого ТекЭлемент Из Модули Цикл

		ЧастиПути = СтрРазделить(ТекЭлемент.Значение, "/");

		Путь = ОписаниеОбъекта.Каталог;

		Для Каждого ТекЧасть Из ЧастиПути Цикл
			Путь = ОбъединитьПути(Путь, СокрЛП(ТекЧасть));
		КонецЦикла;

		Если НЕ ОбщегоНазначения.ФайлСуществует(Путь) Тогда
			Путь = "";
		КонецЕсли;

		ОписаниеОбъекта.Вставить(ТекЭлемент.Ключ, Путь);

	КонецЦикла;

КонецПроцедуры // ДобавитьМодулиОбъекта()

Процедура ПрочитатьПодчиненныеОбъекты(Чтение, ОписаниеОбъекта)

	ТипыОбъектов = ТипыКоллекций("ИмяАнгл");

	Пока Чтение.Прочитать() Цикл

		Если Чтение.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если Чтение.Имя = "ChildObjects" Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;

		Если НЕ Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		КонецЕсли;
		
		Если Чтение.Имя = "Form" Тогда
			ПрочитатьОписаниеФормы(ОбщегоНазначения.ПрочитатьЗначение(Чтение), ОписаниеОбъекта);
		ИначеЕсли Чтение.Имя = "Command" Тогда
			ПрочитатьОписаниеКоманды(Чтение, ОписаниеОбъекта);
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // ПрочитатьПодчиненныеОбъекты()

Процедура ПрочитатьОписаниеФормы(Знач ИмяФормы, ОписаниеОбъекта)

	Путь = ОбъединитьПути(ОписаниеОбъекта.Каталог, "Forms", ИмяФормы + ".xml");

	ФайлОбъекта = Новый Файл(Путь);
	Если НЕ ФайлОбъекта.Существует() Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеФормы = Новый Структура();

	Чтение = Новый ЧтениеXML();
	Чтение.ОткрытьФайл(Путь);

	Пока Чтение.Прочитать() Цикл

		Если НЕ Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		КонецЕсли;
		
		Если Чтение.Имя = "Form" Тогда
			ОписаниеФормы.Вставить("Ид", Чтение.ПолучитьАтрибут("uuid"));
			ОписаниеФормы.Вставить("Имя", ОписаниеОбъекта.Имя + ".Forms." + ИмяФормы);
			ОписаниеФормы.Вставить("Каталог", ОбъединитьПути(ФайлОбъекта.Путь, ФайлОбъекта.ИмяБезРасширения));
			ОписаниеФормы.Вставить("Описание", Путь);

			ДобавитьМодулиОбъекта(ОписаниеФормы, ТипыКоллекций("ИмяАнгл")["Form"]["Модули"]);

			ПутьКФорме = ОбъединитьПути(ОписаниеФормы.Каталог, "Ext", "Form.xml");
			ОписаниеФормы.Вставить("Форма", ?(ОбщегоНазначения.ФайлСуществует(ПутьКФорме), ПутьКФорме, ""));
			Прервать;
		КонецЕсли;

	КонецЦикла;

	Если ОписаниеФормы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Если НЕ ОписаниеОбъекта.Свойство("Формы") Тогда
		ОписаниеОбъекта.Вставить("Формы", Новый Структура());
	КонецЕсли;

	ОписаниеОбъекта.Формы.Вставить(ИмяФормы, ОписаниеФормы);

	Идентификаторы.Вставить(ОписаниеФормы.Ид, ОписаниеФормы);
	Имена.Вставить(ОписаниеФормы.Имя, ОписаниеФормы);

КонецПроцедуры // ПрочитатьОписаниеФормы()

Процедура ПрочитатьОписаниеКоманды(Чтение, ОписаниеОбъекта)

	ИмяКоманды = "";

	ОписаниеКоманды = Новый Структура();
	ОписаниеКоманды.Вставить("Ид", Чтение.ПолучитьАтрибут("uuid"));
	
	Пока Чтение.Прочитать() Цикл

		Если Чтение.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если Чтение.Имя = "Command" Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;

		Если НЕ Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Продолжить;
		КонецЕсли;
		
		Если Чтение.Имя = "Name" Тогда
			ИмяКоманды = ОбщегоНазначения.ПрочитатьЗначение(Чтение);
			ОписаниеКоманды.Вставить("Имя", ОписаниеОбъекта.Имя + ".Commands." + ИмяКоманды);
			
			ПутьККоманде = ОбъединитьПути(ОписаниеОбъекта.Каталог, "Commands", ИмяКоманды);
			ОписаниеКоманды.Вставить("Каталог", ПутьККоманде);
			
			ОписаниеКоманды.Вставить("Описание", "");
			
			ДобавитьМодулиОбъекта(ОписаниеКоманды, ТипыКоллекций("ИмяАнгл")["Command"]["Модули"]);

			Прервать;
		КонецЕсли;

	КонецЦикла;

	Если ОписаниеКоманды.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Если НЕ ОписаниеОбъекта.Свойство("Команды") Тогда
		ОписаниеОбъекта.Вставить("Команды", Новый Структура());
	КонецЕсли;

	ОписаниеОбъекта.Команды.Вставить(ИмяКоманды, ОписаниеКоманды);

	Идентификаторы.Вставить(ОписаниеКоманды.Ид, ОписаниеКоманды);
	Имена.Вставить(ОписаниеКоманды.Имя, ОписаниеКоманды);

КонецПроцедуры // ПрочитатьОписаниеКоманды()

